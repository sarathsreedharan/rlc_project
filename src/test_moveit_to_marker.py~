import sys
import copy
import rospy
import moveit_commander
import moveit_msgs.msg
import geometry_msgs.msg
print "============ Starting tutorial setup"
moveit_commander.roscpp_initialize(sys.argv)
rospy.init_node('move_group_python_interface_tutorial',
                anonymous=True)
robot = moveit_commander.RobotCommander()
group = moveit_commander.MoveGroupCommander("right_arm")

display_trajectory_publisher = rospy.Publisher(
                                    '/move_group/display_planned_path',
                                    moveit_msgs.msg.DisplayTrajectory, queue_size=10)

print "============ Waiting for RVIZ..."
rospy.sleep(10)
print "============ Starting tutorial "
print "============ Generating plan 1"

print "============ Reference frame: %s" % group.get_planning_frame()
print "============ Reference frame: %s" % group.get_end_effector_link()
print "============ Robot Groups:"
print robot.get_group_names()
print "============ Printing robot state"
print robot.get_current_state()
print "============"



pose_target = geometry_msgs.msg.Pose()
# - Translation: [0.997, -0.266, 0.066]
pose_target.position.x = 0.997 #1.026
pose_target.position.y = -0.266 #-0.351
pose_target.position.z = 0.066
 #-0.051
#-0.703, 0.266, -0.324, 0.575]
#- Translation: [0.710, -0.536, 0.022]
pose_target.orientation.x = -0.703 #-0.046
pose_target.orientation.y = 0.266 #0.706
pose_target.orientation.z = -0.324 # 0.695
pose_target.orientation.w = 0.575 #-0.131
group.set_pose_target(pose_target)
plan1 = group.plan()

print "============ Waiting while RVIZ displays plan1..."
rospy.sleep(5)
